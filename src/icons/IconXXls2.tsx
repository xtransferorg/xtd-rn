// @ts-nocheck
import { _ as C, a as e } from './_rollupPluginBabelHelpers-3bc641ae';
import l from 'react';
import { Svg as o, Path as r } from 'react-native-svg';
export default function (t) {
  t.color;
  var i = t.size,
    n = void 0 === i ? '24' : i,
    a = t.fillColor,
    f = void 0 === a ? 'none' : a,
    m = C(t, ['color', 'size', 'fillColor']);
  return l.createElement(
    o,
    e(
      {
        width: n,
        height: n,
        viewBox: '0 0 48 48',
        fill: 'none',
        xmlns: 'http://www.w3.org/2000/svg',
      },
      m
    ),
    l.createElement(r, {
      d: 'M6.53906 5.14697C6.53906 3.49012 7.88221 2.14697 9.53906 2.14697H30.54L41.1004 15.0115V42.9492C41.1004 44.6061 39.7573 45.9492 38.1004 45.9492H9.53906C7.88221 45.9492 6.53906 44.6061 6.53906 42.9492V5.14697Z',
      fill: String(('none' !== f && f) || '#0DA554'),
    }),
    l.createElement(r, {
      d: 'M32.0761 15.011C31.2278 15.011 30.54 14.3233 30.54 13.4749V2.14648L41.1005 15.011H32.0761Z',
      fill: String(('none' !== f && f) || '#036A3A'),
    }),
    l.createElement(r, {
      d: 'M25.6183 26C25.5804 25.5265 25.4028 25.1572 25.0856 24.892C24.7731 24.6269 24.2972 24.4943 23.658 24.4943C23.2508 24.4943 22.917 24.544 22.6566 24.6435C22.4009 24.7382 22.2115 24.8684 22.0884 25.0341C21.9653 25.1998 21.9014 25.3892 21.8967 25.6023C21.8872 25.7775 21.918 25.9361 21.989 26.0781C22.0647 26.2154 22.1831 26.3409 22.3441 26.4545C22.5051 26.5634 22.7111 26.6629 22.962 26.7528C23.213 26.8428 23.5112 26.9233 23.8569 26.9943L25.0501 27.25C25.855 27.4205 26.5439 27.6454 27.1168 27.9247C27.6897 28.2041 28.1585 28.5331 28.5231 28.9119C28.8877 29.286 29.1552 29.7074 29.3256 30.1761C29.5008 30.6449 29.5908 31.1562 29.5955 31.7102C29.5908 32.6667 29.3517 33.4763 28.8782 34.1392C28.4047 34.8021 27.7276 35.3063 26.8469 35.652C25.971 35.9976 24.9175 36.1705 23.6864 36.1705C22.4222 36.1705 21.319 35.9834 20.3768 35.6094C19.4393 35.2353 18.7101 34.66 18.1893 33.8835C17.6732 33.1023 17.4128 32.1032 17.408 30.8864H21.158C21.1817 31.3314 21.293 31.7055 21.4918 32.0085C21.6907 32.3116 21.9701 32.5412 22.3299 32.6974C22.6945 32.8537 23.1277 32.9318 23.6296 32.9318C24.051 32.9318 24.4038 32.8797 24.6879 32.7756C24.9719 32.6714 25.1874 32.527 25.3342 32.3423C25.4809 32.1577 25.5567 31.947 25.5614 31.7102C25.5567 31.4877 25.4833 31.2936 25.3413 31.1278C25.204 30.9574 24.9767 30.8059 24.6594 30.6733C24.3422 30.536 23.9137 30.4081 23.3739 30.2898L21.9251 29.9773C20.6372 29.6979 19.6216 29.2315 18.8782 28.5781C18.1396 27.92 17.7726 27.0227 17.7773 25.8864C17.7726 24.9631 18.0188 24.1558 18.516 23.4645C19.0179 22.7685 19.7115 22.2263 20.5969 21.8381C21.4871 21.4498 22.5075 21.2557 23.658 21.2557C24.8323 21.2557 25.8479 21.4522 26.7049 21.8452C27.5619 22.2382 28.2224 22.7921 28.6864 23.5071C29.1552 24.2173 29.3919 25.0483 29.3967 26H25.6183Z',
      fill: String(('none' !== f && f) || 'white'),
    })
  );
}
